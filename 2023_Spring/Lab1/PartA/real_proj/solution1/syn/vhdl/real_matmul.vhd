-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity real_matmul is
generic (
    C_M_AXI_MEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_MEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_MEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_MEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_MEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_MEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_mem_AWVALID : OUT STD_LOGIC;
    m_axi_mem_AWREADY : IN STD_LOGIC;
    m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ADDR_WIDTH-1 downto 0);
    m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_AWUSER_WIDTH-1 downto 0);
    m_axi_mem_WVALID : OUT STD_LOGIC;
    m_axi_mem_WREADY : IN STD_LOGIC;
    m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH-1 downto 0);
    m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH/8-1 downto 0);
    m_axi_mem_WLAST : OUT STD_LOGIC;
    m_axi_mem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_WUSER_WIDTH-1 downto 0);
    m_axi_mem_ARVALID : OUT STD_LOGIC;
    m_axi_mem_ARREADY : IN STD_LOGIC;
    m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ADDR_WIDTH-1 downto 0);
    m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MEM_ARUSER_WIDTH-1 downto 0);
    m_axi_mem_RVALID : IN STD_LOGIC;
    m_axi_mem_RREADY : OUT STD_LOGIC;
    m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_DATA_WIDTH-1 downto 0);
    m_axi_mem_RLAST : IN STD_LOGIC;
    m_axi_mem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_RUSER_WIDTH-1 downto 0);
    m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BVALID : IN STD_LOGIC;
    m_axi_mem_BREADY : OUT STD_LOGIC;
    m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_ID_WIDTH-1 downto 0);
    m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of real_matmul is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "real_matmul_real_matmul,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=6350001,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=2575,HLS_SYN_LUT=3286,HLS_VERSION=2023_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (12 downto 0) := "0000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (12 downto 0) := "0000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (12 downto 0) := "0000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (12 downto 0) := "0000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (12 downto 0) := "0000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (12 downto 0) := "0001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (12 downto 0) := "0010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (12 downto 0) := "0100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv26_28F6 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000010100011110110";
    constant ap_const_lv13_1388 : STD_LOGIC_VECTOR (12 downto 0) := "1001110001000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv16_12C : STD_LOGIC_VECTOR (15 downto 0) := "0000000100101100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv9_96 : STD_LOGIC_VECTOR (8 downto 0) := "010010110";
    constant ap_const_lv13_64 : STD_LOGIC_VECTOR (12 downto 0) := "0000001100100";
    constant ap_const_lv15_7F38 : STD_LOGIC_VECTOR (14 downto 0) := "111111100111000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal MatA_DRAM : STD_LOGIC_VECTOR (63 downto 0);
    signal MatB_DRAM : STD_LOGIC_VECTOR (63 downto 0);
    signal MatC_DRAM : STD_LOGIC_VECTOR (63 downto 0);
    signal MatC_DRAM_read_reg_603 : STD_LOGIC_VECTOR (63 downto 0);
    signal MatB_DRAM_read_reg_608 : STD_LOGIC_VECTOR (63 downto 0);
    signal MatA_DRAM_read_reg_613 : STD_LOGIC_VECTOR (63 downto 0);
    signal counter_reg_624 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln27_fu_283_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln27_reg_629 : STD_LOGIC_VECTOR (25 downto 0);
    signal counter_2_fu_295_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal counter_2_reg_637 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_fu_301_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_reg_642 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln27_fu_289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_311_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_reg_647 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln33_fu_323_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln33_reg_652 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_337_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_reg_657 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln_reg_662 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln33_fu_353_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln33_reg_667 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal add_ln53_1_fu_362_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln53_1_reg_675 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln54_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln54_reg_680 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_1_fu_380_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln53_1_reg_685 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln53_fu_392_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul_ln53_reg_690 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln53_fu_398_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln53_reg_695 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln53_fu_435_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln53_reg_703 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln55_fu_443_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln55_reg_708 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln54_fu_447_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln54_reg_716 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_551_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln33_1_reg_726 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal MatC_BRAM_1_1_1_load_reg_731 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal MatC_BRAM_1_1_9_load_reg_736 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_10_load_reg_741 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_11_load_reg_746 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_543_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_751 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatA_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal MatA_BRAM_ce0 : STD_LOGIC;
    signal MatA_BRAM_we0 : STD_LOGIC;
    signal MatA_BRAM_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatB_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal MatB_BRAM_ce0 : STD_LOGIC;
    signal MatB_BRAM_we0 : STD_LOGIC;
    signal MatB_BRAM_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_idle : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_ready : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WLAST : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_RREADY : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_BREADY : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_ce0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_we0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_ce0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_we0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_idle : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_ready : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_ce0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_ce0 : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out_ap_vld : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_idle : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_ready : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WLAST : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARVALID : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_RREADY : STD_LOGIC;
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_BREADY : STD_LOGIC;
    signal mem_AWVALID : STD_LOGIC;
    signal mem_AWREADY : STD_LOGIC;
    signal mem_WVALID : STD_LOGIC;
    signal mem_WREADY : STD_LOGIC;
    signal mem_ARVALID : STD_LOGIC;
    signal mem_ARREADY : STD_LOGIC;
    signal mem_RVALID : STD_LOGIC;
    signal mem_RREADY : STD_LOGIC;
    signal mem_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal mem_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal mem_BVALID : STD_LOGIC;
    signal mem_BREADY : STD_LOGIC;
    signal indvar_flatten6_reg_176 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_1_reg_187 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_198 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg : STD_LOGIC := '0';
    signal grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal phi_urem_fu_118 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln27_fu_414_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal phi_mul_fu_122 : STD_LOGIC_VECTOR (25 downto 0);
    signal counter_1_fu_126 : STD_LOGIC_VECTOR (12 downto 0);
    signal MatC_BRAM_1_1_1_fu_130 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_18_fu_505_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_9_fu_134 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_17_fu_498_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_10_fu_138 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_16_fu_491_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_11_fu_142 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_15_fu_484_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln33_fu_323_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln33_fu_323_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln33_2_fu_329_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln33_fu_332_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln53_fu_368_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln53_fu_392_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln27_2_fu_402_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln27_1_fu_408_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal MatC_BRAM_1_1_12_fu_456_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_13_fu_463_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_fu_470_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal MatC_BRAM_1_1_14_fu_477_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln33_1_fu_532_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_551_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_551_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_551_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal grp_fu_551_p20 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln33_fu_323_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul_ln53_fu_392_p00 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component real_matmul_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        rem_i_urem_cast : IN STD_LOGIC_VECTOR (6 downto 0);
        MatA_BRAM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        MatA_BRAM_ce0 : OUT STD_LOGIC;
        MatA_BRAM_we0 : OUT STD_LOGIC;
        MatA_BRAM_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        MatB_BRAM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        MatB_BRAM_ce0 : OUT STD_LOGIC;
        MatB_BRAM_we0 : OUT STD_LOGIC;
        MatB_BRAM_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        sext_ln45 : IN STD_LOGIC_VECTOR (62 downto 0);
        MatB_DRAM : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component real_matmul_real_matmul_Pipeline_VITIS_LOOP_56_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln57_1 : IN STD_LOGIC_VECTOR (8 downto 0);
        MatA_BRAM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        MatA_BRAM_ce0 : OUT STD_LOGIC;
        MatA_BRAM_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        zext_ln54 : IN STD_LOGIC_VECTOR (1 downto 0);
        MatB_BRAM_address0 : OUT STD_LOGIC_VECTOR (8 downto 0);
        MatB_BRAM_ce0 : OUT STD_LOGIC;
        MatB_BRAM_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_1_0_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_1_0_out_ap_vld : OUT STD_LOGIC );
    end component;


    component real_matmul_real_matmul_Pipeline_VITIS_LOOP_63_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_mem_AWVALID : OUT STD_LOGIC;
        m_axi_mem_AWREADY : IN STD_LOGIC;
        m_axi_mem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WVALID : OUT STD_LOGIC;
        m_axi_mem_WREADY : IN STD_LOGIC;
        m_axi_mem_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_mem_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_WLAST : OUT STD_LOGIC;
        m_axi_mem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARVALID : OUT STD_LOGIC;
        m_axi_mem_ARREADY : IN STD_LOGIC;
        m_axi_mem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RVALID : IN STD_LOGIC;
        m_axi_mem_RREADY : OUT STD_LOGIC;
        m_axi_mem_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_mem_RLAST : IN STD_LOGIC;
        m_axi_mem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_mem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BVALID : IN STD_LOGIC;
        m_axi_mem_BREADY : OUT STD_LOGIC;
        m_axi_mem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        shl_ln : IN STD_LOGIC_VECTOR (6 downto 0);
        MatC_DRAM : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln63 : IN STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_1_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_0_0_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_1_1_2 : IN STD_LOGIC_VECTOR (15 downto 0);
        MatC_BRAM_0_1_2 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component real_matmul_mul_7ns_10ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component real_matmul_mul_2ns_9ns_9_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        dout : OUT STD_LOGIC_VECTOR (8 downto 0) );
    end component;


    component real_matmul_mac_muladd_6ns_9s_14ns_15_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (5 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component real_matmul_MatA_BRAM_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component real_matmul_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        MatA_DRAM : OUT STD_LOGIC_VECTOR (63 downto 0);
        MatB_DRAM : OUT STD_LOGIC_VECTOR (63 downto 0);
        MatC_DRAM : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component real_matmul_mem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    MatA_BRAM_U : component real_matmul_MatA_BRAM_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 300,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => MatA_BRAM_address0,
        ce0 => MatA_BRAM_ce0,
        we0 => MatA_BRAM_we0,
        d0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_d0,
        q0 => MatA_BRAM_q0);

    MatB_BRAM_U : component real_matmul_MatA_BRAM_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 300,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => MatB_BRAM_address0,
        ce0 => MatB_BRAM_ce0,
        we0 => MatB_BRAM_we0,
        d0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_d0,
        q0 => MatB_BRAM_q0);

    grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210 : component real_matmul_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start,
        ap_done => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done,
        ap_idle => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_idle,
        ap_ready => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_ready,
        m_axi_mem_AWVALID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => ap_const_logic_0,
        m_axi_mem_AWADDR => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWADDR,
        m_axi_mem_AWID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWID,
        m_axi_mem_AWLEN => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WVALID,
        m_axi_mem_WREADY => ap_const_logic_0,
        m_axi_mem_WDATA => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WLAST,
        m_axi_mem_WID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WID,
        m_axi_mem_WUSER => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => mem_ARREADY,
        m_axi_mem_ARADDR => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARADDR,
        m_axi_mem_ARID => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARID,
        m_axi_mem_ARLEN => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => mem_RVALID,
        m_axi_mem_RREADY => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_RREADY,
        m_axi_mem_RDATA => mem_RDATA,
        m_axi_mem_RLAST => ap_const_logic_0,
        m_axi_mem_RID => ap_const_lv1_0,
        m_axi_mem_RFIFONUM => mem_RFIFONUM,
        m_axi_mem_RUSER => ap_const_lv1_0,
        m_axi_mem_RRESP => ap_const_lv2_0,
        m_axi_mem_BVALID => ap_const_logic_0,
        m_axi_mem_BREADY => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_BREADY,
        m_axi_mem_BRESP => ap_const_lv2_0,
        m_axi_mem_BID => ap_const_lv1_0,
        m_axi_mem_BUSER => ap_const_lv1_0,
        rem_i_urem_cast => empty_reg_657,
        MatA_BRAM_address0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_address0,
        MatA_BRAM_ce0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_ce0,
        MatA_BRAM_we0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_we0,
        MatA_BRAM_d0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_d0,
        MatB_BRAM_address0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_address0,
        MatB_BRAM_ce0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_ce0,
        MatB_BRAM_we0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_we0,
        MatB_BRAM_d0 => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_d0,
        sext_ln45 => trunc_ln_reg_662,
        MatB_DRAM => MatB_DRAM_read_reg_608);

    grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221 : component real_matmul_real_matmul_Pipeline_VITIS_LOOP_56_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start,
        ap_done => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done,
        ap_idle => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_idle,
        ap_ready => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_ready,
        mul_ln57_1 => mul_ln53_reg_690,
        MatA_BRAM_address0 => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_address0,
        MatA_BRAM_ce0 => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_ce0,
        MatA_BRAM_q0 => MatA_BRAM_q0,
        zext_ln54 => select_ln53_reg_703,
        MatB_BRAM_address0 => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_address0,
        MatB_BRAM_ce0 => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_ce0,
        MatB_BRAM_q0 => MatB_BRAM_q0,
        MatC_BRAM_1_0_out => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out,
        MatC_BRAM_1_0_out_ap_vld => grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out_ap_vld);

    grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230 : component real_matmul_real_matmul_Pipeline_VITIS_LOOP_63_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start,
        ap_done => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done,
        ap_idle => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_idle,
        ap_ready => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_ready,
        m_axi_mem_AWVALID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWVALID,
        m_axi_mem_AWREADY => mem_AWREADY,
        m_axi_mem_AWADDR => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWADDR,
        m_axi_mem_AWID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWID,
        m_axi_mem_AWLEN => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWLEN,
        m_axi_mem_AWSIZE => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWSIZE,
        m_axi_mem_AWBURST => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWBURST,
        m_axi_mem_AWLOCK => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWLOCK,
        m_axi_mem_AWCACHE => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWCACHE,
        m_axi_mem_AWPROT => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWPROT,
        m_axi_mem_AWQOS => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWQOS,
        m_axi_mem_AWREGION => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWREGION,
        m_axi_mem_AWUSER => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWUSER,
        m_axi_mem_WVALID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WVALID,
        m_axi_mem_WREADY => mem_WREADY,
        m_axi_mem_WDATA => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WDATA,
        m_axi_mem_WSTRB => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WSTRB,
        m_axi_mem_WLAST => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WLAST,
        m_axi_mem_WID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WID,
        m_axi_mem_WUSER => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WUSER,
        m_axi_mem_ARVALID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARVALID,
        m_axi_mem_ARREADY => ap_const_logic_0,
        m_axi_mem_ARADDR => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARADDR,
        m_axi_mem_ARID => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARID,
        m_axi_mem_ARLEN => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARLEN,
        m_axi_mem_ARSIZE => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARSIZE,
        m_axi_mem_ARBURST => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARBURST,
        m_axi_mem_ARLOCK => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARLOCK,
        m_axi_mem_ARCACHE => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARCACHE,
        m_axi_mem_ARPROT => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARPROT,
        m_axi_mem_ARQOS => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARQOS,
        m_axi_mem_ARREGION => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARREGION,
        m_axi_mem_ARUSER => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_ARUSER,
        m_axi_mem_RVALID => ap_const_logic_0,
        m_axi_mem_RREADY => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_RREADY,
        m_axi_mem_RDATA => ap_const_lv16_0,
        m_axi_mem_RLAST => ap_const_logic_0,
        m_axi_mem_RID => ap_const_lv1_0,
        m_axi_mem_RFIFONUM => ap_const_lv10_0,
        m_axi_mem_RUSER => ap_const_lv1_0,
        m_axi_mem_RRESP => ap_const_lv2_0,
        m_axi_mem_BVALID => mem_BVALID,
        m_axi_mem_BREADY => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_BREADY,
        m_axi_mem_BRESP => ap_const_lv2_0,
        m_axi_mem_BID => ap_const_lv1_0,
        m_axi_mem_BUSER => ap_const_lv1_0,
        shl_ln => shl_ln_reg_647,
        MatC_DRAM => MatC_DRAM_read_reg_603,
        sext_ln63 => tmp_2_reg_751,
        MatC_BRAM_1_0_2 => MatC_BRAM_1_1_10_load_reg_741,
        MatC_BRAM_0_0_2 => MatC_BRAM_1_1_1_load_reg_731,
        MatC_BRAM_1_1_2 => MatC_BRAM_1_1_11_load_reg_746,
        MatC_BRAM_0_1_2 => MatC_BRAM_1_1_9_load_reg_736);

    control_s_axi_U : component real_matmul_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        MatA_DRAM => MatA_DRAM,
        MatB_DRAM => MatB_DRAM,
        MatC_DRAM => MatC_DRAM,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mem_m_axi_U : component real_matmul_mem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_MEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_MEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_MEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_MEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_MEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_MEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_MEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_MEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_MEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_MEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_MEM_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 10,
        USER_DW => 16,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_mem_AWVALID,
        AWREADY => m_axi_mem_AWREADY,
        AWADDR => m_axi_mem_AWADDR,
        AWID => m_axi_mem_AWID,
        AWLEN => m_axi_mem_AWLEN,
        AWSIZE => m_axi_mem_AWSIZE,
        AWBURST => m_axi_mem_AWBURST,
        AWLOCK => m_axi_mem_AWLOCK,
        AWCACHE => m_axi_mem_AWCACHE,
        AWPROT => m_axi_mem_AWPROT,
        AWQOS => m_axi_mem_AWQOS,
        AWREGION => m_axi_mem_AWREGION,
        AWUSER => m_axi_mem_AWUSER,
        WVALID => m_axi_mem_WVALID,
        WREADY => m_axi_mem_WREADY,
        WDATA => m_axi_mem_WDATA,
        WSTRB => m_axi_mem_WSTRB,
        WLAST => m_axi_mem_WLAST,
        WID => m_axi_mem_WID,
        WUSER => m_axi_mem_WUSER,
        ARVALID => m_axi_mem_ARVALID,
        ARREADY => m_axi_mem_ARREADY,
        ARADDR => m_axi_mem_ARADDR,
        ARID => m_axi_mem_ARID,
        ARLEN => m_axi_mem_ARLEN,
        ARSIZE => m_axi_mem_ARSIZE,
        ARBURST => m_axi_mem_ARBURST,
        ARLOCK => m_axi_mem_ARLOCK,
        ARCACHE => m_axi_mem_ARCACHE,
        ARPROT => m_axi_mem_ARPROT,
        ARQOS => m_axi_mem_ARQOS,
        ARREGION => m_axi_mem_ARREGION,
        ARUSER => m_axi_mem_ARUSER,
        RVALID => m_axi_mem_RVALID,
        RREADY => m_axi_mem_RREADY,
        RDATA => m_axi_mem_RDATA,
        RLAST => m_axi_mem_RLAST,
        RID => m_axi_mem_RID,
        RUSER => m_axi_mem_RUSER,
        RRESP => m_axi_mem_RRESP,
        BVALID => m_axi_mem_BVALID,
        BREADY => m_axi_mem_BREADY,
        BRESP => m_axi_mem_BRESP,
        BID => m_axi_mem_BID,
        BUSER => m_axi_mem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => mem_ARVALID,
        I_ARREADY => mem_ARREADY,
        I_ARADDR => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARADDR,
        I_ARLEN => grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARLEN,
        I_RVALID => mem_RVALID,
        I_RREADY => mem_RREADY,
        I_RDATA => mem_RDATA,
        I_RFIFONUM => mem_RFIFONUM,
        I_AWVALID => mem_AWVALID,
        I_AWREADY => mem_AWREADY,
        I_AWADDR => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWADDR,
        I_AWLEN => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWLEN,
        I_WVALID => mem_WVALID,
        I_WREADY => mem_WREADY,
        I_WDATA => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WDATA,
        I_WSTRB => grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WSTRB,
        I_BVALID => mem_BVALID,
        I_BREADY => mem_BREADY);

    mul_7ns_10ns_16_1_1_U28 : component real_matmul_mul_7ns_10ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln33_fu_323_p0,
        din1 => mul_ln33_fu_323_p1,
        dout => mul_ln33_fu_323_p2);

    mul_2ns_9ns_9_1_1_U29 : component real_matmul_mul_2ns_9ns_9_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 2,
        din1_WIDTH => 9,
        dout_WIDTH => 9)
    port map (
        din0 => mul_ln53_fu_392_p0,
        din1 => ap_const_lv9_96,
        dout => mul_ln53_fu_392_p2);

    mac_muladd_6ns_9s_14ns_15_4_1_U30 : component real_matmul_mac_muladd_6ns_9s_14ns_15_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 6,
        din1_WIDTH => 9,
        din2_WIDTH => 14,
        dout_WIDTH => 15)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_551_p0,
        din1 => grp_fu_551_p1,
        din2 => grp_fu_551_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_551_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_ready = ap_const_logic_1)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_ready = ap_const_logic_1)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_ready = ap_const_logic_1)) then 
                    grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    counter_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                counter_1_fu_126 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln53_fu_356_p2 = ap_const_lv1_1))) then 
                counter_1_fu_126 <= counter_2_reg_637;
            end if; 
        end if;
    end process;

    i_1_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_1_reg_187 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_1_reg_187 <= select_ln53_1_reg_685;
            end if; 
        end if;
    end process;

    indvar_flatten6_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                indvar_flatten6_reg_176 <= ap_const_lv3_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                indvar_flatten6_reg_176 <= add_ln53_1_reg_675;
            end if; 
        end if;
    end process;

    j_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_reg_198 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                j_reg_198 <= add_ln54_reg_716;
            end if; 
        end if;
    end process;

    phi_mul_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul_fu_122 <= ap_const_lv26_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln53_fu_356_p2 = ap_const_lv1_1))) then 
                phi_mul_fu_122 <= add_ln27_reg_629;
            end if; 
        end if;
    end process;

    phi_urem_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_urem_fu_118 <= ap_const_lv13_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln53_fu_356_p2 = ap_const_lv1_1))) then 
                phi_urem_fu_118 <= select_ln27_fu_414_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                MatA_DRAM_read_reg_613 <= MatA_DRAM;
                MatB_DRAM_read_reg_608 <= MatB_DRAM;
                MatC_DRAM_read_reg_603 <= MatC_DRAM;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                MatC_BRAM_1_1_10_fu_138 <= MatC_BRAM_1_1_16_fu_491_p3;
                MatC_BRAM_1_1_11_fu_142 <= MatC_BRAM_1_1_15_fu_484_p3;
                MatC_BRAM_1_1_1_fu_130 <= MatC_BRAM_1_1_18_fu_505_p3;
                MatC_BRAM_1_1_9_fu_134 <= MatC_BRAM_1_1_17_fu_498_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                MatC_BRAM_1_1_10_load_reg_741 <= MatC_BRAM_1_1_10_fu_138;
                MatC_BRAM_1_1_11_load_reg_746 <= MatC_BRAM_1_1_11_fu_142;
                MatC_BRAM_1_1_1_load_reg_731 <= MatC_BRAM_1_1_1_fu_130;
                MatC_BRAM_1_1_9_load_reg_736 <= MatC_BRAM_1_1_9_fu_134;
                    tmp_2_reg_751(15 downto 1) <= tmp_2_fu_543_p3(15 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln27_reg_629 <= add_ln27_fu_283_p2;
                counter_2_reg_637 <= counter_2_fu_295_p2;
                counter_reg_624 <= counter_1_fu_126;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln33_1_reg_726 <= grp_fu_551_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln53_1_reg_675 <= add_ln53_1_fu_362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln54_reg_716 <= add_ln54_fu_447_p2;
                select_ln53_reg_703 <= select_ln53_fu_435_p3;
                trunc_ln55_reg_708 <= trunc_ln55_fu_443_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                empty_reg_657 <= empty_fu_337_p1;
                trunc_ln_reg_662 <= add_ln33_fu_332_p2(63 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln53_fu_356_p2 = ap_const_lv1_0))) then
                icmp_ln54_reg_680 <= icmp_ln54_fu_374_p2;
                mul_ln53_reg_690 <= mul_ln53_fu_392_p2;
                select_ln53_1_reg_685 <= select_ln53_1_fu_380_p3;
                trunc_ln53_reg_695 <= trunc_ln53_fu_398_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln27_fu_289_p2 = ap_const_lv1_0))) then
                mul_ln33_reg_652 <= mul_ln33_fu_323_p2;
                    shl_ln_reg_647(6 downto 1) <= shl_ln_fu_311_p3(6 downto 1);
                tmp_reg_642 <= phi_mul_fu_122(25 downto 20);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                    zext_ln33_reg_667(5 downto 0) <= zext_ln33_fu_353_p1(5 downto 0);
            end if;
        end if;
    end process;
    shl_ln_reg_647(0) <= '0';
    zext_ln33_reg_667(14 downto 6) <= "000000000";
    tmp_2_reg_751(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln27_fu_289_p2, ap_CS_fsm_state4, ap_CS_fsm_state5, icmp_ln53_fu_356_p2, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done, grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done, grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done, ap_CS_fsm_state7, ap_CS_fsm_state13)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln27_fu_289_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln53_fu_356_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXX";
        end case;
    end process;

    MatA_BRAM_address0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_address0, grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            MatA_BRAM_address0 <= grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatA_BRAM_address0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_address0;
        else 
            MatA_BRAM_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    MatA_BRAM_ce0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_ce0, grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            MatA_BRAM_ce0 <= grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatA_BRAM_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatA_BRAM_ce0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_ce0;
        else 
            MatA_BRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    MatA_BRAM_we0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatA_BRAM_we0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatA_BRAM_we0;
        else 
            MatA_BRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;


    MatB_BRAM_address0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_address0, grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            MatB_BRAM_address0 <= grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatB_BRAM_address0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_address0;
        else 
            MatB_BRAM_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    MatB_BRAM_ce0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_ce0, grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            MatB_BRAM_ce0 <= grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatB_BRAM_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatB_BRAM_ce0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_ce0;
        else 
            MatB_BRAM_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    MatB_BRAM_we0_assign_proc : process(ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            MatB_BRAM_we0 <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_MatB_BRAM_we0;
        else 
            MatB_BRAM_we0 <= ap_const_logic_0;
        end if; 
    end process;

    MatC_BRAM_1_1_12_fu_456_p3 <= 
        grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out when (trunc_ln55_reg_708(0) = '1') else 
        MatC_BRAM_1_1_11_fu_142;
    MatC_BRAM_1_1_13_fu_463_p3 <= 
        MatC_BRAM_1_1_10_fu_138 when (trunc_ln55_reg_708(0) = '1') else 
        grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out;
    MatC_BRAM_1_1_14_fu_477_p3 <= 
        MatC_BRAM_1_1_1_fu_130 when (trunc_ln55_reg_708(0) = '1') else 
        grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out;
    MatC_BRAM_1_1_15_fu_484_p3 <= 
        MatC_BRAM_1_1_12_fu_456_p3 when (trunc_ln53_reg_695(0) = '1') else 
        MatC_BRAM_1_1_11_fu_142;
    MatC_BRAM_1_1_16_fu_491_p3 <= 
        MatC_BRAM_1_1_13_fu_463_p3 when (trunc_ln53_reg_695(0) = '1') else 
        MatC_BRAM_1_1_10_fu_138;
    MatC_BRAM_1_1_17_fu_498_p3 <= 
        MatC_BRAM_1_1_9_fu_134 when (trunc_ln53_reg_695(0) = '1') else 
        MatC_BRAM_1_1_fu_470_p3;
    MatC_BRAM_1_1_18_fu_505_p3 <= 
        MatC_BRAM_1_1_1_fu_130 when (trunc_ln53_reg_695(0) = '1') else 
        MatC_BRAM_1_1_14_fu_477_p3;
    MatC_BRAM_1_1_fu_470_p3 <= 
        grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_MatC_BRAM_1_0_out when (trunc_ln55_reg_708(0) = '1') else 
        MatC_BRAM_1_1_9_fu_134;
    add_ln27_2_fu_402_p2 <= std_logic_vector(unsigned(phi_urem_fu_118) + unsigned(ap_const_lv13_1));
    add_ln27_fu_283_p2 <= std_logic_vector(unsigned(phi_mul_fu_122) + unsigned(ap_const_lv26_28F6));
    add_ln33_fu_332_p2 <= std_logic_vector(unsigned(zext_ln33_2_fu_329_p1) + unsigned(MatA_DRAM_read_reg_613));
    add_ln53_1_fu_362_p2 <= std_logic_vector(unsigned(indvar_flatten6_reg_176) + unsigned(ap_const_lv3_1));
    add_ln53_fu_368_p2 <= std_logic_vector(unsigned(i_1_reg_187) + unsigned(ap_const_lv2_1));
    add_ln54_fu_447_p2 <= std_logic_vector(unsigned(select_ln53_fu_435_p3) + unsigned(ap_const_lv2_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done)
    begin
        if ((grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done)
    begin
        if ((grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done)
    begin
        if ((grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln27_fu_289_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln27_fu_289_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln27_fu_289_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln27_fu_289_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    counter_2_fu_295_p2 <= std_logic_vector(unsigned(counter_1_fu_126) + unsigned(ap_const_lv13_1));
    empty_fu_337_p1 <= phi_urem_fu_118(7 - 1 downto 0);
    grp_fu_551_p0 <= zext_ln33_reg_667(6 - 1 downto 0);
    grp_fu_551_p1 <= ap_const_lv15_7F38(9 - 1 downto 0);
    grp_fu_551_p2 <= grp_fu_551_p20(14 - 1 downto 0);
    grp_fu_551_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln33_1_fu_532_p3),15));
    grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_ap_start_reg;
    grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start <= grp_real_matmul_Pipeline_VITIS_LOOP_56_5_fu_221_ap_start_reg;
    grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start <= grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_ap_start_reg;
    icmp_ln27_1_fu_408_p2 <= "1" when (unsigned(add_ln27_2_fu_402_p2) < unsigned(ap_const_lv13_64)) else "0";
    icmp_ln27_fu_289_p2 <= "1" when (counter_1_fu_126 = ap_const_lv13_1388) else "0";
    icmp_ln53_fu_356_p2 <= "1" when (indvar_flatten6_reg_176 = ap_const_lv3_4) else "0";
    icmp_ln54_fu_374_p2 <= "1" when (j_reg_198 = ap_const_lv2_2) else "0";

    mem_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mem_ARVALID <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_ARVALID;
        else 
            mem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    mem_AWVALID_assign_proc : process(ap_CS_fsm_state12, grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWVALID, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            mem_AWVALID <= grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_AWVALID;
        else 
            mem_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    mem_BREADY_assign_proc : process(ap_CS_fsm_state12, grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_BREADY, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            mem_BREADY <= grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_BREADY;
        else 
            mem_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    mem_RREADY_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            mem_RREADY <= grp_real_matmul_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2_fu_210_m_axi_mem_RREADY;
        else 
            mem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    mem_WVALID_assign_proc : process(ap_CS_fsm_state12, grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WVALID, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            mem_WVALID <= grp_real_matmul_Pipeline_VITIS_LOOP_63_6_fu_230_m_axi_mem_WVALID;
        else 
            mem_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln33_fu_323_p0 <= mul_ln33_fu_323_p00(7 - 1 downto 0);
    mul_ln33_fu_323_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_311_p3),16));
    mul_ln33_fu_323_p1 <= ap_const_lv16_12C(10 - 1 downto 0);
    mul_ln53_fu_392_p0 <= mul_ln53_fu_392_p00(2 - 1 downto 0);
    mul_ln53_fu_392_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln53_1_fu_380_p3),9));
    select_ln27_fu_414_p3 <= 
        add_ln27_2_fu_402_p2 when (icmp_ln27_1_fu_408_p2(0) = '1') else 
        ap_const_lv13_0;
    select_ln53_1_fu_380_p3 <= 
        add_ln53_fu_368_p2 when (icmp_ln54_fu_374_p2(0) = '1') else 
        i_1_reg_187;
    select_ln53_fu_435_p3 <= 
        ap_const_lv2_0 when (icmp_ln54_reg_680(0) = '1') else 
        j_reg_198;
    shl_ln33_1_fu_532_p3 <= (counter_reg_624 & ap_const_lv1_0);
    shl_ln_fu_311_p3 <= (tmp_fu_301_p4 & ap_const_lv1_0);
    tmp_2_fu_543_p3 <= (add_ln33_1_reg_726 & ap_const_lv1_0);
    tmp_fu_301_p4 <= phi_mul_fu_122(25 downto 20);
    trunc_ln53_fu_398_p1 <= select_ln53_1_fu_380_p3(1 - 1 downto 0);
    trunc_ln55_fu_443_p1 <= select_ln53_fu_435_p3(1 - 1 downto 0);
    zext_ln33_2_fu_329_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln33_reg_652),64));
    zext_ln33_fu_353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_reg_642),15));
end behav;
